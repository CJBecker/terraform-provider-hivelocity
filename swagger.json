{
    "swagger": "2.0",
    "basePath": "/api/v2",
    "paths": {
        "/bandwidth/device/{deviceId}": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to View",
                    "name": "deviceId",
                    "type": "integer"
                },
                {
                    "default": "day",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "day",
                        "week",
                        "month",
                        "custom"
                    ],
                    "in": "query",
                    "description": "Preconfigured Time Periods for Graph Data",
                    "name": "period"
                },
                {
                    "default": "eth0",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "eth0",
                        "eth1",
                        "public",
                        "private",
                        "all"
                    ],
                    "in": "query",
                    "description": "Network Interface to use for Graph Data",
                    "name": "interface"
                },
                {
                    "type": "boolean",
                    "default": false,
                    "in": "query",
                    "description": "Include Historical Interface Data for Device for Resellers",
                    "name": "historical"
                },
                {
                    "default": 300,
                    "type": "integer",
                    "required": true,
                    "in": "query",
                    "description": "Interval of Graph in Seconds",
                    "name": "step"
                },
                {
                    "type": "integer",
                    "default": 0,
                    "in": "query",
                    "description": "Start Time of Custom Time Period. (Unix Epoch Time)",
                    "name": "start"
                },
                {
                    "type": "integer",
                    "default": 1651685721,
                    "in": "query",
                    "description": "End Time of Custom Time Period (Unix Epoch Time)",
                    "name": "end"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Device Bandwidth Graph retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bandwidth"
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve Bandwidth Graph for this Device."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns RRDTool Xport based bandwidth data in JSON format",
                "operationId": "post_device_id_bandwidth_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bandwidth"
                ]
            }
        },
        "/bandwidth/device/{deviceId}/image": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to View",
                    "name": "deviceId",
                    "type": "integer"
                },
                {
                    "default": "day",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "day",
                        "week",
                        "month",
                        "custom"
                    ],
                    "in": "query",
                    "description": "Preconfigured Time Periods for Graph Data",
                    "name": "period"
                },
                {
                    "default": "eth0",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "eth0",
                        "eth1",
                        "public",
                        "private",
                        "all"
                    ],
                    "in": "query",
                    "description": "Network Interface to use for Graph Data",
                    "name": "interface"
                },
                {
                    "type": "integer",
                    "default": 0,
                    "in": "query",
                    "description": "Start Time of Custom Time Period. (Unix Epoch Time)",
                    "name": "start"
                },
                {
                    "type": "integer",
                    "default": 1651685721,
                    "in": "query",
                    "description": "End Time of Custom Time Period (Unix Epoch Time)",
                    "name": "end"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Device Bandwidth Graph retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BandwidthImage"
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve Bandwidth Graph for this Device."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns RRDTool Graph based bandwidth in PNG format",
                "operationId": "post_device_id_bandwidth_image_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bandwidth"
                ]
            }
        },
        "/bandwidth/service/{serviceId}": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Service to View",
                    "name": "serviceId",
                    "type": "integer"
                },
                {
                    "default": "day",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "day",
                        "week",
                        "month",
                        "custom"
                    ],
                    "in": "query",
                    "description": "Preconfigured Time Periods for Graph Data",
                    "name": "period"
                },
                {
                    "default": "eth0",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "eth0",
                        "eth1",
                        "public",
                        "private",
                        "all"
                    ],
                    "in": "query",
                    "description": "Network Interface to use for Graph Data",
                    "name": "interface"
                },
                {
                    "default": 300,
                    "type": "integer",
                    "required": true,
                    "in": "query",
                    "description": "Interval of Graph in Seconds",
                    "name": "step"
                },
                {
                    "type": "integer",
                    "default": 0,
                    "in": "query",
                    "description": "Start Time of Custom Time Period. (Unix Epoch Time)",
                    "name": "start"
                },
                {
                    "type": "integer",
                    "default": 1651685721,
                    "in": "query",
                    "description": "End Time of Custom Time Period (Unix Epoch Time)",
                    "name": "end"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Service Bandwidth Graph retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bandwidth"
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve Bandwidth Graph for this Service."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns RRDTool Xport based bandwidth data in JSON format",
                "operationId": "post_service_id_bandwidth_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bandwidth"
                ]
            }
        },
        "/bandwidth/service/{serviceId}/image": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Service to View",
                    "name": "serviceId",
                    "type": "integer"
                },
                {
                    "default": "day",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "day",
                        "week",
                        "month",
                        "custom"
                    ],
                    "in": "query",
                    "description": "Preconfigured Time Periods for Graph Data",
                    "name": "period"
                },
                {
                    "default": "eth0",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "eth0",
                        "eth1",
                        "public",
                        "private",
                        "all"
                    ],
                    "in": "query",
                    "description": "Network Interface to use for Graph Data",
                    "name": "interface"
                },
                {
                    "type": "integer",
                    "default": 0,
                    "in": "query",
                    "description": "Start Time of Custom Time Period. (Unix Epoch Time)",
                    "name": "start"
                },
                {
                    "type": "integer",
                    "default": 1651685721,
                    "in": "query",
                    "description": "End Time of Custom Time Period (Unix Epoch Time)",
                    "name": "end"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Service Bandwidth Graph retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BandwidthImage"
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve Bandwidth Graph for this Service."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns RRDTool Graph based bandwidth in PNG format",
                "operationId": "post_service_id_bandwidth_image_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bandwidth"
                ]
            }
        },
        "/bare-metal-devices/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Devices found successfuly",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BareMetalDevice"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a list with all servers as bare metal",
                "operationId": "get_bare_metal_device_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bare Metal Devices"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BareMetalDevice"
                        }
                    },
                    "201": {
                        "description": "Device provisioning started"
                    },
                    "400": {
                        "description": "Invalid device parameters."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Deploy a new bare metal server",
                "operationId": "post_bare_metal_device_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/BareMetalDeviceCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bare Metal Devices"
                ]
            }
        },
        "/bare-metal-devices/batch": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BareMetalDeviceBatch"
                        }
                    },
                    "201": {
                        "description": "Device provisioning started"
                    },
                    "400": {
                        "description": "Invalid device parameters."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Deploy a list of new bare metal servers",
                "operationId": "post_bare_metal_device_batch_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/BareMetalDeviceBatchCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bare Metal Devices"
                ]
            }
        },
        "/bare-metal-devices/{deviceId}": {
            "parameters": [
                {
                    "in": "query",
                    "description": "Id of the deployment to interact with",
                    "name": "deploymentId",
                    "type": "string"
                },
                {
                    "name": "deviceId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Device updated.",
                        "schema": {
                            "$ref": "#/definitions/BareMetalDevice"
                        }
                    },
                    "400": {
                        "description": "Invalid device parameters."
                    },
                    "404": {
                        "description": "Device Not Found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Update a bare metal device",
                "operationId": "put_bare_metal_device_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/BareMetalDeviceUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bare Metal Devices"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Deployment Found",
                        "schema": {
                            "$ref": "#/definitions/BareMetalDevice"
                        }
                    },
                    "401": {
                        "description": "Access to Deployment not Allowed"
                    },
                    "404": {
                        "description": "Deployment Not Found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return bare metal device",
                "operationId": "get_bare_metal_device_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bare Metal Devices"
                ]
            },
            "delete": {
                "responses": {
                    "201": {
                        "description": "Cancellation Started."
                    },
                    "204": {
                        "description": "Device Deleted"
                    },
                    "401": {
                        "description": "Not Allowed"
                    },
                    "404": {
                        "description": "Device Not Found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Cancel the specified bare metal device",
                "operationId": "delete_bare_metal_device_id_resource",
                "tags": [
                    "Bare Metal Devices"
                ]
            }
        },
        "/billing-info/": {
            "put": {
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Credit"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Verify credit card with all Billing Info",
                "operationId": "put_billing_info_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/BillingInfoVerification"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "BillingInfo"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BillingInfo"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a list with all Billing Info",
                "operationId": "get_billing_info_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "BillingInfo"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BillingInfo"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Create verification for credit card with all Billing Info",
                "operationId": "post_billing_info_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/BillingInfoVerification"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "BillingInfo"
                ]
            }
        },
        "/cancellation/cancellation": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Cancellation"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return the services cancellations of a client",
                "operationId": "get_cancellation_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Cancellation"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Cancellation"
                        }
                    },
                    "500": {
                        "description": "Service/Device already being cancelled"
                    },
                    "404": {
                        "description": "Device not found"
                    },
                    "401": {
                        "description": "Access to this resource is not permitted."
                    },
                    "400": {
                        "description": "Service/Device already being cancelled"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Creates Cancellation for a device/service",
                "description": "reason options are:\n    'My current service is being upgraded',\n    'Hardware/software/network or power issues',\n    'I think I have found a better deal',\n    'I have experienced tech support problems',\n    'I am consolidating my Hivelocity accounts',\n    'I am a reseller and my customer cancelled',\n    'I am moving to a different technology solution: Public Cloud',\n    'I am moving to a different technology solution: Managed Hosting Company',\n    'A product difference (Example: AWS)',\n    ''",
                "operationId": "post_cancellation_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CancellationCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Cancellation"
                ]
            }
        },
        "/cancellation/cancellation/{cancellationId}": {
            "parameters": [
                {
                    "name": "cancellationId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Cancellation"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return any cancellation by ID",
                "operationId": "get_cancellation_id_client_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Cancellation"
                ]
            }
        },
        "/cancellation/device/{deviceId}": {
            "parameters": [
                {
                    "name": "deviceId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Cancellation"
                        }
                    },
                    "404": {
                        "description": "Device not found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return the Cancellation found for a Device",
                "operationId": "get_cancellation_device_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Cancellation"
                ]
            }
        },
        "/cancellation/service/{serviceId}": {
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Cancellation"
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return the Cancellation found for a Service",
                "operationId": "get_cancellation_service_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Cancellation"
                ]
            }
        },
        "/contact/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contact-dump"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a list with all Contacts",
                "operationId": "get_contact_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Contact"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Contact successfully created",
                        "schema": {
                            "$ref": "#/definitions/Contact-dump"
                        }
                    },
                    "400": {
                        "description": "Unable to create Contact"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Create a new Contact",
                "operationId": "post_contact_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ContactCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Contact"
                ]
            }
        },
        "/contact/password": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Recieve a token and password, verify the user and reset your password",
                "operationId": "put_password_reset",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PasswordResponse"
                        }
                    }
                ],
                "tags": [
                    "Contact"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Recieve a request to reset password, and send a link by email with token",
                "operationId": "post_password_reset",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PasswordRequest"
                        }
                    }
                ],
                "tags": [
                    "Contact"
                ]
            }
        },
        "/contact/{contactId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of Contact to View / Update",
                    "name": "contactId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Contact successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/Contact-dump"
                        }
                    },
                    "400": {
                        "description": "Unable to update Contact Data."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Edit a Contact",
                "operationId": "put_contact_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ContactUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Contact"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Contact-dump"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return details of a specific Contact",
                "operationId": "get_contact_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Contact"
                ]
            },
            "delete": {
                "responses": {
                    "404": {
                        "description": "Contact not found."
                    },
                    "204": {
                        "description": "Contact successfully deleted."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Delete a Contact",
                "operationId": "delete_contact_id_resource",
                "tags": [
                    "Contact"
                ]
            }
        },
        "/contact/{contactId}/password": {
            "parameters": [
                {
                    "in": "path",
                    "description": "\"ID of Contact to change password\"",
                    "name": "contactId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "400": {
                        "description": "Invalid password for authentication."
                    },
                    "200": {
                        "description": "Password was changed."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Change password for a Contact",
                "operationId": "put_password_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Password"
                        }
                    }
                ],
                "tags": [
                    "Contact"
                ]
            }
        },
        "/credit/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Credit"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a list with all Credits",
                "operationId": "get_credit_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Credit"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Credit"
                        }
                    },
                    "503": {
                        "description": "Unable to add new credit."
                    },
                    "201": {
                        "description": "Successfully added a new credit."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Receive billing method id and amount and return the created Credit",
                "operationId": "post_credit_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateCredit"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Credit"
                ]
            }
        },
        "/credit/total": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TotalActiveCredit"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return the client's total active credit amount",
                "operationId": "get_total_active_credit_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Credit"
                ]
            }
        },
        "/deploy/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Deployments found successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Deployment"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a list with all client deployments",
                "operationId": "get_deployment_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Deployment Created",
                        "schema": {
                            "$ref": "#/definitions/Deployment"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Start a new deployment",
                "operationId": "post_deployment_resource",
                "parameters": [
                    {
                        "name": "deploymentName",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            }
        },
        "/deploy/{deploymentId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Id of the deployment to interact with",
                    "name": "deploymentId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Server configuration added to Deployment",
                        "schema": {
                            "$ref": "#/definitions/Deployment"
                        }
                    },
                    "400": {
                        "description": "Your configuration have incompatible or unavailable options"
                    },
                    "401": {
                        "description": "Access to this Deployment not Allowed"
                    },
                    "404": {
                        "description": "Deployment Not Found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Receive product, quantity and options to be added on the deployment",
                "operationId": "put_deployment_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeploymentCustomization"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Deployment Found",
                        "schema": {
                            "$ref": "#/definitions/Deployment"
                        }
                    },
                    "401": {
                        "description": "Access to Deployment not Allowed"
                    },
                    "404": {
                        "description": "Deployment Not Found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a dictionary with deployment information",
                "operationId": "get_deployment_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Deployment Deleted"
                    },
                    "401": {
                        "description": "Access to this Deployment not Allowed"
                    },
                    "404": {
                        "description": "Deployment Not Found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Delete the specified deployment",
                "operationId": "delete_deployment_id_resource",
                "tags": [
                    "Deployment"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Deployment Started"
                    },
                    "401": {
                        "description": "Access to Deployment not Allowed"
                    },
                    "404": {
                        "description": "Deployment Not Found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Input a billing info id and script to process and finish a deployment",
                "operationId": "post_deployment_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeploymentStart"
                        }
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            }
        },
        "/device/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Device-dump"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return Active Devices and basic MetaData",
                "operationId": "get_device_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/devicelist": {},
        "/device/ipmi/thresholds": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Devices IPMI Thresholds updated.",
                        "schema": {
                            "$ref": "#/definitions/DevicesIPMIThresholds"
                        }
                    },
                    "400": {
                        "description": "Unable to update IPMI Thresholds for this Device list."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Updates IPMI thresholds for device list",
                "operationId": "put_ipmi_devices_thresholds_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateDevicesIPMIThresholds"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/preview-ignition": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EffectiveIgnitionResponse"
                        }
                    },
                    "422": {
                        "description": "Error"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Given an Ignition file and other parameters, output the effective Ignition file used for provisioning",
                "description": "This is useful for verifying and troubleshooting any ignition-based provisions.\nNote that any injected values not specified by request input are sample values.",
                "operationId": "post_preview_effective_ignition_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/EffectiveIgnition"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/tags": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Get all device tags for current client",
                "operationId": "get_client_device_tag_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/tags-order": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Device tags order updated.",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Update device tags order for current user",
                "operationId": "put_client_device_tag_order_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Get device tags order for current user",
                "operationId": "get_client_device_tag_order_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/tags-order/all": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Get all device tags order",
                "operationId": "get_all_device_tag_order_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of Device to View / Update",
                    "name": "deviceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Device MetaData was updated.",
                        "schema": {
                            "$ref": "#/definitions/Device-dump"
                        }
                    },
                    "400": {
                        "description": "Unable to update Device MetaData."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Updates Device MetaData for a Single Device",
                "operationId": "put_device_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeviceUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Device-dump"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns detailed information for a Single Device",
                "operationId": "get_device_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/deploy/script": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of the Device to request the custom script from deploy",
                    "name": "deviceId",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/device/{deviceId}/deploy/ssh_key": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of the Device to request the device ssh key from deploy",
                    "name": "deviceId",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/device/{deviceId}/events": {
            "parameters": [
                {
                    "name": "deviceId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeviceEvent"
                            }
                        }
                    },
                    "404": {
                        "description": "Device not found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns all Events found for a single device",
                "operationId": "get_device_id_event_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ignition": {
            "parameters": [
                {
                    "name": "deviceId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Retrieves a client's ignition file for a provisioning device after SPS's changes are injected",
                "operationId": "get_effective_ignition_id_resource",
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/initial-creds": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to retrieve initial authentication credentials for",
                    "name": "deviceId",
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Device initial credentials.",
                        "schema": {
                            "$ref": "#/definitions/DeviceInitialCreds"
                        }
                    },
                    "400": {
                        "description": "Unable to get initial credentials for this Device."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns initial password for the device",
                "operationId": "get_initial_creds_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/initial-password": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to retrieve initial password",
                    "name": "deviceId",
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Device initial password.",
                        "schema": {
                            "$ref": "#/definitions/DevicePassword"
                        }
                    },
                    "400": {
                        "description": "Unable to get initial password this Device."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns initial password for the device",
                "operationId": "get_initial_password_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ipmi": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to retrieve IPMI info.",
                    "name": "deviceId",
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Device IPMI Thresholds retrieved",
                        "schema": {
                            "$ref": "#/definitions/DeviceIPMIInfo"
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve IPMI Thresholds for this Device."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns IPMI info data",
                "operationId": "get_ipmi_info_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ipmi/login-data": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to retrieve IPMI Login data.",
                    "name": "deviceId",
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Device IPMI Login data retrieved",
                        "schema": {
                            "$ref": "#/definitions/IPMILoginData"
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve IPMI Login data for this Device."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns IPMI login credentials",
                "operationId": "get_ipmi_info_login_data_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ipmi/nat": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of a client Device",
                    "name": "deviceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "400": {
                        "description": "The request has problems. Revise it and try again."
                    },
                    "202": {
                        "description": "The request was accepted."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Clear NAT rules based on the device client id",
                "description": "Returns success or error",
                "operationId": "get_device_ipminat_rule_resource",
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ipmi/thresholds": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to View",
                    "name": "deviceId",
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Device IPMI Thresholds retrieved.",
                        "schema": {
                            "$ref": "#/definitions/DeviceIPMIThresholds"
                        }
                    },
                    "400": {
                        "description": "Unable to update IPMI Thresholds for this Device."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Updates IPMI thresholds data",
                "operationId": "put_ipmi_thresholds_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeviceIPMIThresholds"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Device IPMI Thresholds retrieved.",
                        "schema": {
                            "$ref": "#/definitions/DeviceIPMIThresholds"
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve IPMI Thresholds for this Device."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns IPMI thresholds data",
                "operationId": "get_ipmi_thresholds_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ipmi/valid-login": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to check IPMI credentials",
                    "name": "deviceId",
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "IPMI credentials validated.",
                        "schema": {
                            "$ref": "#/definitions/IPMIValidLogin"
                        }
                    },
                    "400": {
                        "description": "Unable to validate IPMI credentials this Device."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns if device have valid credentials for IPMI login",
                "operationId": "get_ipmi_valid_login_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ipmi/whitelist/": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of the Device to put IP in Whitelist",
                    "name": "deviceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "400": {
                        "description": "The request has problems. Revise it and try again."
                    },
                    "202": {
                        "description": "The request was accepted."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Add a public IP on IPMI whitelist",
                "description": "Returns IPMI public IP",
                "operationId": "post_device_ipmi_whitelist_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeviceIPMIWhitelistIP"
                        }
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ips": {
            "parameters": [
                {
                    "name": "deviceId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Device Ip Assignments retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IPAssignment"
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve IP Assignments for this Device."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return All IP Assignments bound to a Device",
                "operationId": "get_device_ip_assignments_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ports": {
            "parameters": [
                {
                    "name": "deviceId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DevicePort"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns a list of all Network Ports on a Device",
                "operationId": "get_device_port_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/power": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of Device to View / Update",
                    "name": "deviceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DevicePower"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Get device's current power status",
                "operationId": "get_power_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            },
            "post": {
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DevicePower"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Apply action to device power",
                "operationId": "post_power_resource",
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "type": "string",
                        "pattern": "boot|reboot|shutdown",
                        "required": true,
                        "description": "Must be one of boot|reboot|shutdown"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/reload": {
            "parameters": [
                {
                    "name": "deviceId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ServiceOption"
                        }
                    },
                    "400": {
                        "description": "Error"
                    },
                    "404": {
                        "description": "Device not found"
                    },
                    "202": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Reload any SPS Device with any available OS",
                "operationId": "post_device_reload_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeviceReload"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/tags": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of Device to View / Update",
                    "name": "deviceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Device tags updated.",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Update device tags",
                "operationId": "put_device_tag_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Get device tags",
                "operationId": "get_device_tag_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/domains/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DomainReturn"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return the domains of a client",
                "operationId": "get_domain_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DomainReturn"
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "201": {
                        "description": "Created."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Create a new domain",
                "operationId": "post_domain_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DomainCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/ptr": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PTRRecordReturn"
                            }
                        }
                    },
                    "400": {
                        "description": "Error"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return the PTR records of a client",
                "operationId": "get_ptr_record_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/ptr/{recordId}": {
            "parameters": [
                {
                    "name": "recordId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PTRRecordReturn"
                        }
                    },
                    "400": {
                        "description": "Error"
                    },
                    "202": {
                        "description": "Success."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "operationId": "put_ptr_record_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PTRRecordUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/PTRRecordReturn"
                        }
                    },
                    "400": {
                        "description": "Error"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "operationId": "get_ptr_record_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domainID}/aaaa-record": {
            "parameters": [
                {
                    "name": "domainID",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AAAARecordReturn"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return all AAAA Records found for given zone",
                "operationId": "get_aaaa_record_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AAAARecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Create a new AAAA Record for given zone",
                "operationId": "post_aaaa_record_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AAAARecordCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domainID}/aaaa-record/{recordId}": {
            "parameters": [
                {
                    "name": "domainID",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "recordId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AAAARecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "202": {
                        "description": "Updated"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Update an AAAA Record for given id",
                "operationId": "put_aaaa_record_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AAAARecordUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AAAARecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return Single AAAA Records found for given id",
                "operationId": "get_aaaa_record_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "delete": {
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "204": {
                        "description": "Deleted"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Delete an AAAA Record for given zone",
                "operationId": "delete_aaaa_record_id_resource",
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domainID}/mx-record": {
            "parameters": [
                {
                    "name": "domainID",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MXRecordReturn"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return all MX Records found for given zone",
                "operationId": "get_mx_record_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MXRecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Create a new MX Record for given zone",
                "operationId": "post_mx_record_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/MXRecordCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domainID}/mx-record/{recordId}": {
            "parameters": [
                {
                    "name": "domainID",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "recordId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MXRecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "202": {
                        "description": "Updated"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Update an MX Record for given zone",
                "operationId": "put_mx_record_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/MXRecordUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MXRecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return Single MX Records found for given id",
                "operationId": "get_mx_record_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "delete": {
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "204": {
                        "description": "Deleted"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Delete an MX Record for given zone",
                "operationId": "delete_mx_record_id_resource",
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domainId}": {
            "parameters": [
                {
                    "name": "domainId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/DomainReturn"
                        }
                    },
                    "404": {
                        "description": "Domain not found."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a domain for given id",
                "operationId": "get_domain_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "delete": {
                "responses": {
                    "500": {
                        "description": "Error."
                    },
                    "404": {
                        "description": "Domain not found."
                    },
                    "204": {
                        "description": "Deleted."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Delete domain for given id",
                "operationId": "delete_domain_id_resource",
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domain}/a-record": {
            "parameters": [
                {
                    "name": "domain",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ARecord"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return all A Records found for given zone name",
                "operationId": "get_a_record_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ARecord"
                        }
                    },
                    "409": {
                        "description": "Record Already Exists"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Create a new A Record for given zone",
                "operationId": "post_a_record_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ARecord"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domain}/a-record/{record}": {
            "parameters": [
                {
                    "name": "domain",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "record",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ARecord"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "202": {
                        "description": "Updated"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Update an A Record for given zone",
                "operationId": "put_a_record_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ARecord"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ARecord"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return Single A Records found for given domain name",
                "operationId": "get_a_record_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "delete": {
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "204": {
                        "description": "Deleted"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Delete a single A Record value for given zone",
                "operationId": "delete_a_record_id_resource",
                "tags": [
                    "Domains"
                ]
            }
        },
        "/ignition/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successfully returned ignition configs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IgnitionResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to get ignition configs"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Gets all public ssh key",
                "operationId": "get_ignition_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Ignition"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Successfully created ignition configs",
                        "schema": {
                            "$ref": "#/definitions/IgnitionResponse"
                        }
                    },
                    "400": {
                        "description": "Unable to create ignition config"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Gets all public ssh key",
                "operationId": "post_ignition_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateIgnition"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Ignition"
                ]
            }
        },
        "/ignition/{ignitionId}": {
            "parameters": [
                {
                    "name": "ignitionId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Successfully returned ignition config",
                        "schema": {
                            "$ref": "#/definitions/IgnitionResponse"
                        }
                    },
                    "400": {
                        "description": "Unable to get ignition config"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "operationId": "get_ignition_resource_id",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Ignition"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successfully returned ignition configs"
                    },
                    "400": {
                        "description": "Unable to delete ignition configs"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "operationId": "delete_ignition_resource_id",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Ignition"
                ]
            }
        },
        "/inventory/locations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Location data was found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Location"
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to gather locations"
                    },
                    "404": {
                        "description": "Unable to find locations"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return sps facilities and locations",
                "operationId": "get_location_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Inventory"
                ]
            }
        },
        "/inventory/product": {
            "parameters": [
                {
                    "default": "MAIN",
                    "type": "string",
                    "enum": [
                        "MAIN",
                        "MASSIVESTORAGE",
                        "GPU",
                        "OUTLET",
                        "LANDING"
                    ],
                    "in": "query",
                    "description": "Filter products by location",
                    "name": "location"
                },
                {
                    "default": null,
                    "in": "query",
                    "description": "Filter by bonding support. Values are true/false. None will return a mix of both.",
                    "name": "bonding_support",
                    "type": "string"
                },
                {
                    "default": "facility",
                    "in": "query",
                    "description": "Get results grouped by 'city', 'facility', or 'flat'",
                    "name": "group_by",
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Product data was found",
                        "schema": {
                            "$ref": "#/definitions/Inventory"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return structured sps stock data, grouped by city or facility code for all products",
                "operationId": "get_stock_resource",
                "tags": [
                    "Inventory"
                ]
            }
        },
        "/inventory/product/{productId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Product database ID",
                    "name": "productId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Product data was found",
                        "schema": {
                            "$ref": "#/definitions/Stock"
                        }
                    },
                    "404": {
                        "description": "Product with given id not found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a structured sps stock data, grouped by city or facility code for a single product",
                "operationId": "get_stock_by_product_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Inventory"
                ]
            }
        },
        "/invoice/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Invoice"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return serialized data on all invoices",
                "operationId": "get_invoice_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Invoice"
                ]
            }
        },
        "/invoice/search": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Invoice search results.",
                        "schema": {
                            "$ref": "#/definitions/InvoiceSeachResult"
                        }
                    },
                    "400": {
                        "description": "Invalid invoice search request."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return results of invoice search",
                "operationId": "get_invoice_search_resource",
                "parameters": [
                    {
                        "type": "integer",
                        "in": "query",
                        "description": "The end date range",
                        "name": "endDate"
                    },
                    {
                        "type": "integer",
                        "in": "query",
                        "description": "The start date range",
                        "name": "startDate"
                    },
                    {
                        "default": 10,
                        "type": "integer",
                        "in": "query",
                        "description": "Number of items per page.",
                        "name": "perPage"
                    },
                    {
                        "default": 1,
                        "type": "integer",
                        "in": "query",
                        "description": "The page number of search.",
                        "name": "page"
                    },
                    {
                        "type": "string",
                        "in": "query",
                        "description": "Content search.",
                        "name": "q"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Invoice"
                ]
            }
        },
        "/invoice/unpaid": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Unpaid data was found",
                        "schema": {
                            "$ref": "#/definitions/InvoiceUnpaid"
                        }
                    },
                    "500": {
                        "description": "Unable to gather unpaid invoices"
                    },
                    "404": {
                        "description": "Unable to find unpaid invoices"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return total balance of all unpaid invoices",
                "operationId": "get_invoice_unpaid_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Invoice"
                ]
            }
        },
        "/invoice/{invoiceId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Invoice database ID",
                    "name": "invoiceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return serialized data on a single invoice",
                "operationId": "get_invoice_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Invoice"
                ]
            }
        },
        "/invoice/{invoiceId}/details": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Invoice database ID",
                    "name": "invoiceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/InvoiceDetails"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return detailed information for an invoice",
                "description": "Same data as the PDF file but serialized",
                "operationId": "get_invoice_id_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Invoice"
                ]
            }
        },
        "/invoice/{invoiceId}/pdf-download": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Invoice database ID",
                    "name": "invoiceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/InvoicePDF"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return an Invoice PDF file in Base64 Encoded Format",
                "operationId": "get_invoice_pdf_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Invoice"
                ]
            }
        },
        "/ip/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IPAssignment"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return All IP Assignments for a Client Account",
                "operationId": "get_ip_assignment_resource",
                "parameters": [
                    {
                        "name": "displayPrivateNetworks",
                        "in": "query",
                        "type": "boolean",
                        "description": "Return Private (RFC 1918) Addresses in Results",
                        "default": false
                    },
                    {
                        "name": "displayIPv6",
                        "in": "query",
                        "type": "boolean",
                        "description": "Return IPv6 Addresses in Results",
                        "default": true
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "IPAssignment"
                ]
            },
            "post": {
                "responses": {
                    "400": {
                        "description": "Invalid action"
                    },
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Request a new IP Assignment",
                "operationId": "post_ip_assignment_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/IpAssignmentRequest"
                        }
                    }
                ],
                "tags": [
                    "IPAssignment"
                ]
            }
        },
        "/ip/address/{ipAddress}": {
            "parameters": [
                {
                    "name": "ipAddress",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IPAssignment"
                            }
                        }
                    },
                    "404": {
                        "description": "IP assignment not found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return IP Assignments matching the Subnet Address or an individual IP Address",
                "operationId": "get_ip_assignment_subnet_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "IPAssignment"
                ]
            }
        },
        "/ip/combine": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/IPAssignment"
                        }
                    },
                    "404": {
                        "description": "IP assignment not found"
                    },
                    "401": {
                        "description": "Access to this IP Assignment is not allowed"
                    },
                    "400": {
                        "description": "Invalid action"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Combines multiple IP Assignments",
                "operationId": "post_ip_assignment_combine_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/IpAssignmentCombine"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "IPAssignment"
                ]
            }
        },
        "/ip/{ipAssignmentId}": {
            "parameters": [
                {
                    "name": "ipAssignmentId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/NetworkTask-dump"
                        }
                    },
                    "404": {
                        "description": "IP assignment not found"
                    },
                    "401": {
                        "description": "Access to this IP Assignment is not allowed"
                    },
                    "400": {
                        "description": "Invalid action"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Add or remove a static route",
                "operationId": "put_ip_assignment_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/IpAssignmentPut"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "IPAssignment"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/IPAssignment"
                        }
                    },
                    "404": {
                        "description": "IP Assignment Not Found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a Single IP Assignment by the Unique IP Assignment ID",
                "operationId": "get_ip_assignment_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "IPAssignment"
                ]
            },
            "delete": {
                "responses": {
                    "404": {
                        "description": "IP assignment not found"
                    },
                    "401": {
                        "description": "Access to this IP Assignment is not allowed"
                    },
                    "400": {
                        "description": "Invalid action"
                    },
                    "204": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Deletes an existing IP Assignment",
                "operationId": "delete_ip_assignment_id_resource",
                "tags": [
                    "IPAssignment"
                ]
            }
        },
        "/ip/{ipAssignmentId}/split": {
            "parameters": [
                {
                    "name": "ipAssignmentId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IPAssignment"
                            }
                        }
                    },
                    "404": {
                        "description": "IP assignment not found"
                    },
                    "401": {
                        "description": "Access to this IP Assignment is not allowed"
                    },
                    "400": {
                        "description": "Invalid action"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Splits an existing IP Assignment",
                "operationId": "post_ip_assignment_split_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "IPAssignment"
                ]
            }
        },
        "/network/device/ports": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DevicePort"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns a list of all Network Ports and Associated Devices belonging to a Client",
                "operationId": "get_device_port_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Network"
                ]
            }
        },
        "/network/null": {
            "post": {
                "responses": {
                    "401": {
                        "description": "You are not authorized to null route this IP address."
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "201": {
                        "description": "IP has been null routed!"
                    },
                    "200": {
                        "description": "IP address is already null routed."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Null route an IP (with custom comments)",
                "operationId": "post_detailed_null_route_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DetailedNullIP"
                        }
                    }
                ],
                "tags": [
                    "Network"
                ]
            }
        },
        "/network/null/{ip}": {
            "parameters": [
                {
                    "name": "ip",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "401": {
                        "description": "You are not authorized to null route this IP address."
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "201": {
                        "description": "IP has been null routed!"
                    },
                    "200": {
                        "description": "IP address is already null routed."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Null route an IP",
                "operationId": "get_null_route_resource",
                "tags": [
                    "Network"
                ]
            }
        },
        "/network/status/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetworkTask-dump"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns the Last Status for a long running Network Task, such as modifying a VLAN",
                "operationId": "get_network_task_client_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Network"
                ]
            }
        },
        "/network/status/{deviceId}": {
            "parameters": [
                {
                    "name": "deviceId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/NetworkTask-dump"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns the Last Status for a long running Network Task, such as modifying a VLAN",
                "operationId": "get_network_task_device_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Network"
                ]
            }
        },
        "/network/unnull/{ip}": {
            "parameters": [
                {
                    "name": "ip",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "401": {
                        "description": "You are not authorized to remove a null route on this IP address."
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "202": {
                        "description": "Null route has been removed!"
                    },
                    "200": {
                        "description": "IP address is not null routed."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Remove null route from an IP",
                "operationId": "get_remove_null_route_resource",
                "tags": [
                    "Network"
                ]
            }
        },
        "/order-groups/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Order groups found successfuly.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderGroup"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a list with all Order Groups",
                "operationId": "get_order_group_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Order Groups"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrderGroup"
                        }
                    },
                    "201": {
                        "description": "Order Group created."
                    },
                    "400": {
                        "description": "Invalid Order Group parameters."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Create a new Order Group",
                "operationId": "post_order_group_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OrderGroupCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Order Groups"
                ]
            }
        },
        "/order-groups/{orderGroupId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Id of the order group to interact with",
                    "name": "orderGroupId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Order Group updated.",
                        "schema": {
                            "$ref": "#/definitions/OrderGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid Order Group parameters."
                    },
                    "404": {
                        "description": "Order Group Not Found."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Update an Order Group",
                "operationId": "put_order_group_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OrderGroupUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Order Groups"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Order Group Found.",
                        "schema": {
                            "$ref": "#/definitions/OrderGroup"
                        }
                    },
                    "401": {
                        "description": "Access to Order Group not Allowed."
                    },
                    "404": {
                        "description": "Order Group Not Found."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return an Order Group",
                "operationId": "get_order_group_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Order Groups"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Order Group Deleted"
                    },
                    "401": {
                        "description": "Access to Order Group not Allowed."
                    },
                    "404": {
                        "description": "Order Group Not Found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Delete the specified Order Group",
                "operationId": "delete_order_group_id_resource",
                "tags": [
                    "Order Groups"
                ]
            }
        },
        "/order/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "A list of orders if the current user has them.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order-dump"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a list with all Orders",
                "operationId": "get_order_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Order"
                ]
            }
        },
        "/order/in-progress": {
            "get": {
                "responses": {
                    "200": {
                        "description": "A list of in-progress orders if the current user has them.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order-dump"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a list with all Orders",
                "operationId": "get_order_inprogress_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Order"
                ]
            }
        },
        "/order/{orderId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "\"ID of Order to View\"",
                    "name": "orderId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "An specific order with its details.",
                        "schema": {
                            "$ref": "#/definitions/Order-dump"
                        }
                    },
                    "404": {
                        "description": "Order ID not found."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return details of a specific Order",
                "operationId": "get_order_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Order"
                ]
            }
        },
        "/permission/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Endpoint to get All Permissions",
                "operationId": "get_permission_all_resource",
                "tags": [
                    "Permission"
                ]
            }
        },
        "/permission/contact": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PermissionReturn"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Endpoint to assign a new Permission to a Contact",
                "operationId": "post_permission_assign_contact_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Permission"
                ]
            }
        },
        "/permission/contact/{contactId}": {
            "parameters": [
                {
                    "name": "contactId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Endpoint to get Contact Permissions",
                "operationId": "get_permission_contact_resource",
                "tags": [
                    "Permission"
                ]
            }
        },
        "/permission/user": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Endpoint to get User Permissions",
                "operationId": "get_permission_user_resource",
                "tags": [
                    "Permission"
                ]
            }
        },
        "/product/list": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Product data was found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductInfo"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return structured sps stock data in a list",
                "operationId": "get_product_list_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Product"
                ]
            }
        },
        "/product/options": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductOption"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a mapping of Products and Options with pricing per-period",
                "operationId": "get_products_and_options_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Product"
                ]
            }
        },
        "/product/{productId}/operating-systems": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of the Product",
                    "name": "productId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Option"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return List of operating systems found for a Product",
                "operationId": "get_product_operating_systems_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Product"
                ]
            }
        },
        "/product/{productId}/options": {
            "parameters": [
                {
                    "default": "upgrade",
                    "in": "query",
                    "description": "Get results grouped by 'upgrade' or without grouping.",
                    "name": "groupBy",
                    "type": "string"
                },
                {
                    "in": "path",
                    "description": "ID of the Product",
                    "name": "productId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Product data was found",
                        "schema": {
                            "$ref": "#/definitions/Options"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return List of Options found for a Product",
                "operationId": "get_product_option_resource",
                "tags": [
                    "Product"
                ]
            }
        },
        "/profile/": {
            "parameters": [
                {
                    "in": "query",
                    "description": "\"ID of Contact to manage Profile\"",
                    "name": "contactId",
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Profile successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    },
                    "400": {
                        "description": "Unable to update Profile Data."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Update Profile of current user or a contact with id",
                "description": "The id is optional and if it is necessary must be sent as URL param.",
                "operationId": "put_profile_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ProfileUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Profile"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Get Profile of current user or a contact with id",
                "description": "The id is optional and if it is necessary must be sent as URL param.",
                "operationId": "get_profile_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Profile"
                ]
            }
        },
        "/profile/basic": {
            "parameters": [
                {
                    "in": "query",
                    "description": "\"ID of Contact to manage Basic Profile\"",
                    "name": "contactId",
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BasicProfile"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Get Basic Profile of current user or a contact with id",
                "description": "The id is optional and if it is necessary must be sent as URL param.",
                "operationId": "get_basic_profile_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Profile"
                ]
            }
        },
        "/service/": {
            "parameters": [
                {
                    "type": "integer",
                    "default": null,
                    "in": "query",
                    "description": "Order id of the service",
                    "name": "orderId"
                },
                {
                    "default": "all",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "all",
                        "active",
                        "deactivated",
                        "pending",
                        "suspended",
                        "cancelled"
                    ],
                    "in": "query",
                    "description": "The current status of the service",
                    "name": "status"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Service-dump"
                            }
                        }
                    },
                    "404": {
                        "description": "You don't own any services"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a list of all account services",
                "operationId": "get_service_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Service"
                ]
            }
        },
        "/service/managed-requirements": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ServiceManagedReq"
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a dictionary with managed services operating system and panel requirements",
                "operationId": "get_service_managed_req_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Service"
                ]
            }
        },
        "/service/{serviceId}": {
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Service-dump"
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a dictionary with data from a specific account service",
                "operationId": "get_service_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Service"
                ]
            }
        },
        "/service/{serviceId}/manageable": {
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ServiceManageable"
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a dictionary with data verifying managed services eligibility",
                "operationId": "get_service_manageable_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Service"
                ]
            }
        },
        "/ssh_key/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "All Public ssh key successfully retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SshKeyResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to get all public ssh keys"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Gets all public ssh key",
                "operationId": "get_ssh_key_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "SshKey"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Public ssh key successfully added ",
                        "schema": {
                            "$ref": "#/definitions/SshKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Unable to added public ssh key"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Adds public ssh key",
                "operationId": "post_ssh_key_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SshKey"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "SshKey"
                ]
            }
        },
        "/ssh_key/{sshKeyId}": {
            "parameters": [
                {
                    "name": "sshKeyId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Public ssh key successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/SshKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Unable to update public ssh key."
                    },
                    "404": {
                        "description": "Public ssh key not found."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Updates public ssh key",
                "operationId": "put_ssh_key_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SshKeyUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "SshKey"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Public ssh key successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/SshKeyResponse"
                        }
                    },
                    "404": {
                        "description": "Public ssh key not found."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Get public ssh key",
                "operationId": "get_ssh_key_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "SshKey"
                ]
            },
            "delete": {
                "responses": {
                    "404": {
                        "description": "Public ssh key not found."
                    },
                    "200": {
                        "description": "Public ssh key successfully removed."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Removes public ssh key",
                "operationId": "delete_ssh_key_id_resource",
                "tags": [
                    "SshKey"
                ]
            }
        },
        "/tickets/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "All the tickets retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Ticket"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns a list with all Tickets",
                "operationId": "get_ticket_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Ticket"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Ticket successfully created",
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    },
                    "400": {
                        "description": "Unable to create ticket"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Creates a new ticket",
                "operationId": "post_ticket_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/TicketCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Ticket"
                ]
            }
        },
        "/tickets/search": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Ticket search results.",
                        "schema": {
                            "$ref": "#/definitions/TicketSeachResult"
                        }
                    },
                    "400": {
                        "description": "Invalid ticket search request."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return results of ticket search",
                "operationId": "get_ticket_search_resource",
                "parameters": [
                    {
                        "default": 10,
                        "type": "integer",
                        "in": "query",
                        "description": "Number of items per page.",
                        "name": "perPage"
                    },
                    {
                        "default": 1,
                        "type": "integer",
                        "in": "query",
                        "description": "The page number of search.",
                        "name": "page"
                    },
                    {
                        "type": "string",
                        "in": "query",
                        "description": "Content search.",
                        "name": "q"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Ticket"
                ]
            }
        },
        "/tickets/{ticketId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ticket database ID",
                    "name": "ticketId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Ticket successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    },
                    "404": {
                        "description": "The ticket id not found."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Updates a specific ticket",
                "operationId": "put_ticket_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/TicketPut"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Ticket"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "The ticket retrieved.",
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    },
                    "404": {
                        "description": "The ticket id not found."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns details of a specific ticket",
                "operationId": "get_ticket_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Ticket"
                ]
            }
        },
        "/tickets/{ticketId}/reply": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ticket database ID",
                    "name": "ticketId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "The ticket replies retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TicketPost"
                            }
                        }
                    },
                    "404": {
                        "description": "The ticket id not found."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns a reply for a specific ticket",
                "operationId": "get_ticket_reply_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Ticket"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Ticket reply successfully created.",
                        "schema": {
                            "$ref": "#/definitions/TicketPost"
                        }
                    },
                    "404": {
                        "description": "The ticket id not found."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Creates reply for a specific Ticket",
                "operationId": "post_ticket_reply_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/TicketCreateReply"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Ticket"
                ]
            }
        },
        "/token/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Public API Tokens retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PublicApiToken-dump"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns a list of Public API Tokens for the current user",
                "operationId": "get_token_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Token"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PublicApiToken-dump"
                        }
                    },
                    "500": {
                        "description": "Unable to create Public API Token."
                    },
                    "201": {
                        "description": "Public API Token created."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Create a new Public API Token for the current user",
                "operationId": "post_token_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PublicApiToken-load"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Token"
                ]
            }
        },
        "/token/{token}": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "Public API Token",
                    "name": "token",
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Public API Token successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/PublicApiToken-dump"
                        }
                    },
                    "400": {
                        "description": "Unable to update the Public API Token."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Updates the Public API Token",
                "operationId": "put_token_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PublicApiToken-load"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Token"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Public API Token retrieved.",
                        "schema": {
                            "$ref": "#/definitions/PublicApiToken-dump"
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve Public API Token."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns Public API Token",
                "operationId": "get_token_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Token"
                ]
            },
            "delete": {
                "responses": {
                    "400": {
                        "description": "Unable to remove the Public API Token."
                    },
                    "201": {
                        "description": "Public API Token successfully removed."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Deletes the Public API Token",
                "operationId": "delete_token_id_resource",
                "tags": [
                    "Token"
                ]
            }
        },
        "/vlan/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "VLANs retrieved successfuly",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Vlan"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Return a list with all Private VLANs",
                "operationId": "get_vlan_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "VLAN"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Vlan"
                        }
                    },
                    "400": {
                        "description": "Invalid VLAN creation parameter."
                    },
                    "201": {
                        "description": "VLAN created successfully."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Create a new Private VLAN",
                "operationId": "post_vlan_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/VlanCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "VLAN"
                ]
            }
        },
        "/vlan/{vlanId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Id of the VLAN to interact with",
                    "name": "vlanId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/Vlan"
                        }
                    },
                    "400": {
                        "description": "Error."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Update an existing Private VLAN, including adding and/or removing devices from it",
                "operationId": "put_vlan_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/VlanCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "VLAN"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "VLAN Found",
                        "schema": {
                            "$ref": "#/definitions/Vlan"
                        }
                    },
                    "404": {
                        "description": "VLAN Not Found"
                    },
                    "401": {
                        "description": "Access to VLAN not Allowed"
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Fetch information from an existing Private VLAN",
                "operationId": "get_vlan_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "VLAN"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/Vlan"
                        }
                    },
                    "400": {
                        "description": "Error."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Remove an existing Private VLAN",
                "operationId": "delete_vlan_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "VLAN"
                ]
            }
        },
        "/webhooks/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Webhook"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns your active Webhooks",
                "operationId": "get_webhook_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Webhook was created.",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "400": {
                        "description": "Unable to create Webhook."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Create a new Webhook for a Webhook Event",
                "operationId": "post_webhook_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/WebhookCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            }
        },
        "/webhooks/events": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WebhookEvent"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns all available Webhook Events",
                "operationId": "get_webhook_event_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            }
        },
        "/webhooks/trigger": {
            "parameters": [
                {
                    "in": "query",
                    "description": "The name of the webhook to trigger.",
                    "name": "webhookName",
                    "type": "string"
                }
            ],
            "post": {
                "responses": {
                    "202": {
                        "description": "Accepted."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Queues a webhook for the event script action that was triggered",
                "operationId": "post_event_script_action_trigger_resource",
                "tags": [
                    "Webhook"
                ]
            }
        },
        "/webhooks/{webhookId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of Webhook to View / Update",
                    "name": "webhookId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Webhook was updated.",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "400": {
                        "description": "Unable to update Webhook."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Updates a Single Webhook",
                "operationId": "put_webhook_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/WebhookUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Returns detailed information for a Single Webhook",
                "operationId": "get_webhook_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Webhook was deleted."
                    },
                    "403": {
                        "description": "You have not been granted permission to complete this action. Please contact your account manager to grant the proper permission."
                    }
                },
                "summary": "Deletes a single webhook",
                "operationId": "delete_webhook_id_resource",
                "tags": [
                    "Webhook"
                ]
            }
        }
    },
    "info": {
        "title": "Hivelocity API",
        "version": "2.0",
        "description": "Interact with Hivelocity"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "apiKey": {
            "type": "apiKey",
            "in": "header",
            "name": "X-API-KEY"
        }
    },
    "security": [
        {
            "apiKey": []
        }
    ],
    "tags": [
        {
            "name": "Bandwidth",
            "description": "Request RRDTool Based Bandwidth Data from a Resource."
        },
        {
            "name": "Bare Metal Devices",
            "description": "Endpoints to handle provisioning bare metal.  See all devices with the /devices endpoint."
        },
        {
            "name": "BillingInfo",
            "description": "Endpoints to manage Billing Info"
        },
        {
            "name": "Cancellation",
            "description": "Cancellation information"
        },
        {
            "name": "Contact",
            "description": "Endpoints to manager Contacts"
        },
        {
            "name": "Credit",
            "description": "Endpoints to manage Credit"
        },
        {
            "name": "Device",
            "description": "Access to your Bare-Metal or Virtual Devices"
        },
        {
            "name": "Domains",
            "description": "Manage your DNS Domains"
        },
        {
            "name": "Ignition",
            "description": "Endpoints to manage CoreOS ignition files."
        },
        {
            "name": "Inventory",
            "description": "Products Inventory Data"
        },
        {
            "name": "Invoice",
            "description": "Invoice information and PDF download"
        },
        {
            "name": "IPAssignment",
            "description": "Endpoints to manage IP Assignments"
        },
        {
            "name": "Network",
            "description": "Endpoints to perform network related tasks"
        },
        {
            "name": "Order",
            "description": "Get Order and its details"
        },
        {
            "name": "Order Groups",
            "description": "Endpoints to manage Order Groups"
        },
        {
            "name": "Permission",
            "description": "Endpoints to manage Permissions"
        },
        {
            "name": "Product",
            "description": "Endpoints to manage Products"
        },
        {
            "name": "Profile",
            "description": "Endpoints to manage Profiles"
        },
        {
            "name": "Deployment",
            "description": "Endpoints to handle your servers provisioning"
        },
        {
            "name": "Service",
            "description": "Service information"
        },
        {
            "name": "SshKey",
            "description": "Endpoints to manage SSH key."
        },
        {
            "name": "Ticket",
            "description": "Ticket information"
        },
        {
            "name": "Token",
            "description": "Endpoints to manage Public API Token"
        },
        {
            "name": "VLAN",
            "description": "Endpoints to manage VLANs"
        },
        {
            "name": "Webhook",
            "description": "Access and modify your Hivelocity webhooks."
        }
    ],
    "definitions": {
        "Bandwidth": {
            "properties": {
                "metadata": {
                    "type": "object"
                },
                "bandwidthData": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "interface": {
                    "type": "string"
                },
                "switchId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BandwidthImage": {
            "properties": {
                "graphImage": {
                    "type": "string"
                },
                "interface": {
                    "type": "string"
                },
                "switchId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BareMetalDeviceCreate": {
            "required": [
                "hostname",
                "locationName",
                "osName",
                "productId"
            ],
            "properties": {
                "osName": {
                    "type": "string"
                },
                "forceDeviceId": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "default": [],
                    "example": [],
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "script": {
                    "type": "string"
                },
                "vlanId": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "default": "hourly",
                    "example": "hourly"
                },
                "productId": {
                    "type": "integer"
                },
                "locationName": {
                    "type": "string"
                },
                "publicSshKeyId": {
                    "type": "integer"
                },
                "bondingSupport": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "BareMetalDevice": {
            "properties": {
                "osName": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "integer"
                },
                "primaryIp": {
                    "type": "string"
                },
                "orderId": {
                    "type": "integer"
                },
                "powerStatus": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "script": {
                    "type": "string"
                },
                "vlanId": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "hourly"
                },
                "productId": {
                    "type": "integer"
                },
                "productName": {
                    "type": "string"
                },
                "locationName": {
                    "type": "string"
                },
                "publicSshKeyId": {
                    "type": "integer"
                },
                "serviceId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "BareMetalDeviceUpdate": {
            "required": [
                "hostname",
                "osName"
            ],
            "properties": {
                "osName": {
                    "type": "string"
                },
                "ignitionIds": {
                    "type": "array",
                    "description": "Specify Ignition file ID for CoreOS/Flatcar provisions",
                    "default": [],
                    "example": [],
                    "items": {
                        "type": "integer"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "script": {
                    "type": "string"
                },
                "publicSshKeyId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "BareMetalDeviceBatchCreate": {
            "properties": {
                "orderGroupId": {
                    "type": "integer"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BareMetalDeviceCreate"
                    }
                }
            },
            "type": "object"
        },
        "BareMetalDeviceBatch": {
            "properties": {
                "orderGroupId": {
                    "type": "integer"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BareMetalDevice"
                    }
                }
            },
            "type": "object"
        },
        "BillingInfoVerification": {
            "required": [
                "id"
            ],
            "properties": {
                "verificationAmount": {
                    "type": "number"
                },
                "provisionOrderId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Credit": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "amount": {
                    "type": "number"
                },
                "balance": {
                    "type": "number"
                },
                "clientId": {
                    "type": "integer"
                },
                "created": {
                    "type": "integer"
                },
                "orderId": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "billingInfoId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "BillingInfo": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "ccNum": {
                    "type": "string"
                },
                "ccType": {
                    "type": "string"
                },
                "isCCVerified": {
                    "type": "boolean"
                },
                "first": {
                    "type": "string"
                },
                "clientId": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "ccExpire": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "pendingVerification": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "achBank": {
                    "type": "string"
                },
                "achType": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "paymentType": {
                    "type": "string"
                },
                "achAccount": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "achAba": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CancellationCreate": {
            "required": [
                "deviceId",
                "reason",
                "serviceId"
            ],
            "properties": {
                "serviceId": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Cancellation": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "monthlyPayment": {
                    "type": "integer"
                },
                "requestDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "planId": {
                    "type": "integer"
                },
                "activeMonths": {
                    "type": "integer"
                },
                "clientId": {
                    "type": "integer"
                },
                "serviceId": {
                    "type": "integer"
                },
                "cancelled": {
                    "type": "boolean"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ContactCreate": {
            "required": [
                "active",
                "email",
                "fullName"
            ],
            "properties": {
                "phone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "active": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "default": "ef6c255d170bb79f6b609be5086a14c6"
                },
                "fullName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Contact-dump": {
            "required": [
                "active",
                "email",
                "fullName"
            ],
            "properties": {
                "contactId": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "active": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "clientId": {
                    "type": "integer"
                },
                "fullName": {
                    "type": "string"
                },
                "isClient": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ContactUpdate": {
            "properties": {
                "phone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "active": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Password": {
            "required": [
                "newPassword",
                "password"
            ],
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PasswordResponse": {
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PasswordRequest": {
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateCredit": {
            "properties": {
                "billingInfoId": {
                    "type": "integer"
                },
                "amount": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "TotalActiveCredit": {
            "properties": {
                "totalActive": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Device-dump": {
            "required": [
                "name"
            ],
            "properties": {
                "deviceId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "deviceType": {
                    "type": "string"
                },
                "deviceTypeGroup": {
                    "type": "string"
                },
                "powerStatus": {
                    "type": "object"
                },
                "hasCancellation": {
                    "type": "boolean"
                },
                "isManaged": {
                    "type": "boolean"
                },
                "isReload": {
                    "type": "boolean"
                },
                "monitorsUp": {
                    "type": "integer"
                },
                "monitorsTotal": {
                    "type": "integer"
                },
                "managedAlertsTotal": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "ipmiEnabled": {
                    "type": "boolean"
                },
                "displayedTags": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "object"
                },
                "primaryIp": {
                    "type": "string"
                },
                "ipmiAddress": {
                    "type": "object"
                },
                "serviceMonitors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "billingInfo": {
                    "type": "object"
                },
                "servicePlan": {
                    "type": "integer"
                },
                "lastInvoiceId": {
                    "type": "integer"
                },
                "selfProvisioning": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object"
                },
                "spsStatus": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceUpdate": {
            "properties": {
                "name": {
                    "type": "string",
                    "example": "A Descriptive Name for this Device"
                },
                "hostname": {
                    "type": "string",
                    "example": "server1.mydomain.com"
                }
            },
            "type": "object"
        },
        "DevicePower": {
            "required": [
                "powerStatus"
            ],
            "properties": {
                "powerStatus": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceTag": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "DeviceIPMIThresholds": {
            "required": [
                "thresholds"
            ],
            "properties": {
                "thresholds": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UpdateDevicesIPMIThresholds": {
            "required": [
                "device_ids",
                "thresholds"
            ],
            "properties": {
                "thresholds": {
                    "type": "object"
                },
                "device_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "DevicesIPMIThresholds": {
            "required": [
                "devices"
            ],
            "properties": {
                "devices": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DeviceIPMIInfo": {
            "properties": {
                "info": {
                    "$ref": "#/definitions/IPMIInfo"
                },
                "sensors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPMISensor"
                    }
                }
            },
            "type": "object"
        },
        "IPMIInfo": {
            "properties": {
                "ipmbEventReceiver": {
                    "type": "string"
                },
                "bridge": {
                    "type": "string"
                },
                "manufacturerId": {
                    "type": "string"
                },
                "sensorDevice": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "ipmiVersion": {
                    "type": "string"
                },
                "deviceRevision": {
                    "type": "string"
                },
                "chassisDevice": {
                    "type": "string"
                },
                "auxFirmwareRevInfo": {
                    "type": "string"
                },
                "selDevice": {
                    "type": "string"
                },
                "sdrRepositoryDevice": {
                    "type": "string"
                },
                "fruInventoryDevice": {
                    "type": "string"
                },
                "ipmbEventGenerator": {
                    "type": "string"
                },
                "firmwareRevision": {
                    "type": "string"
                },
                "deviceAvailable": {
                    "type": "string"
                },
                "deviceSDRs": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IPMISensor": {
            "properties": {
                "sensorId": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "units": {
                    "type": "string"
                },
                "reading": {
                    "type": "number"
                },
                "group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IPMILoginData": {
            "properties": {
                "drivertype": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IPMIValidLogin": {
            "required": [
                "valid"
            ],
            "properties": {
                "valid": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DevicePassword": {
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceInitialCreds": {
            "properties": {
                "port": {
                    "type": "integer"
                },
                "passwordReturnsUntil": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "lockerUrl": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceIPMIWhitelistIP": {
            "required": [
                "custIp"
            ],
            "properties": {
                "custIp": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceEvent": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceReload": {
            "required": [
                "operatingSystemId"
            ],
            "properties": {
                "publicSshKeyIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "controlPanelId": {
                    "type": "integer"
                },
                "script": {
                    "type": "string"
                },
                "ignitionId": {
                    "type": "integer"
                },
                "body": {
                    "type": "string"
                },
                "operatingSystemId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ServiceOption": {
            "properties": {
                "serviceOptionId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "optionId": {
                    "type": "integer"
                },
                "upgradeName": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "invoiceHide": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IPAssignment": {
            "properties": {
                "portId": {
                    "type": "integer"
                },
                "usableIps": {
                    "type": "array",
                    "example": [],
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "clientId": {
                    "type": "integer",
                    "example": 0
                },
                "netmask": {
                    "type": "string"
                },
                "subnet": {
                    "type": "string"
                },
                "assignmentId": {
                    "type": "integer"
                },
                "vlanId": {
                    "type": "integer"
                },
                "deviceId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DevicePort": {
            "properties": {
                "portId": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "mtu": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "nativeVlanId": {
                    "type": "integer"
                },
                "vlanIds": {
                    "type": "array",
                    "example": [],
                    "items": {
                        "type": "integer"
                    }
                },
                "clientId": {
                    "type": "integer",
                    "example": 0
                },
                "type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "EffectiveIgnition": {
            "required": [
                "ignition"
            ],
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "ignition": {
                    "type": "object"
                },
                "publicKeys": {
                    "type": "array",
                    "default": [],
                    "example": [],
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string"
                },
                "primaryInterface": {
                    "$ref": "#/definitions/PrimaryInterface"
                }
            },
            "type": "object"
        },
        "PrimaryInterface": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "subnet": {
                    "type": "string"
                },
                "dnsServers": {
                    "type": "array",
                    "example": [],
                    "items": {
                        "type": "string"
                    }
                },
                "gateway": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EffectiveIgnitionResponse": {
            "properties": {
                "modifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Modification"
                    }
                },
                "result": {
                    "type": "object"
                },
                "original": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Modification": {
            "properties": {
                "contents": {
                    "type": "object"
                },
                "reason": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DomainCreate": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DomainReturn": {
            "required": [
                "directsTo",
                "domainId",
                "name"
            ],
            "properties": {
                "summary": {
                    "type": "object"
                },
                "domainId": {
                    "type": "integer"
                },
                "directsTo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ARecord": {
            "required": [
                "name",
                "ttl"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AAAARecordCreate": {
            "required": [
                "address",
                "name",
                "ttl"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AAAARecordReturn": {
            "required": [
                "domainId",
                "name",
                "ttl",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "domainId": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AAAARecordUpdate": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MXRecordCreate": {
            "required": [
                "exchange",
                "name",
                "preference",
                "ttl"
            ],
            "properties": {
                "exchange": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "preference": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "MXRecordReturn": {
            "required": [
                "domainId",
                "exchange",
                "id",
                "name",
                "preference",
                "ttl",
                "type"
            ],
            "properties": {
                "exchange": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "domainId": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MXRecordUpdate": {
            "required": [
                "exchange",
                "preference"
            ],
            "properties": {
                "exchange": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "preference": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PTRRecordReturn": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "domainId": {
                    "type": "integer"
                },
                "disabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PTRRecordUpdate": {
            "required": [
                "name"
            ],
            "properties": {
                "ttl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateIgnition": {
            "properties": {
                "contents": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IgnitionResponse": {
            "properties": {
                "contents": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Inventory": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/Stock"
                }
            }
        },
        "Stock": {
            "properties": {
                "edge": {
                    "type": "boolean"
                },
                "product_annually_price": {
                    "type": "number"
                },
                "product_monthly_price": {
                    "type": "number"
                },
                "product_biennial_price": {
                    "type": "number"
                },
                "product_gpu": {
                    "type": "string"
                },
                "monthly_location_premium": {
                    "type": "number"
                },
                "product_memory": {
                    "type": "string"
                },
                "product_original_price": {
                    "type": "number"
                },
                "product_disabled_billing_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "product_hourly_price": {
                    "type": "number"
                },
                "product_display_price": {
                    "type": "number"
                },
                "triennial_location_premium": {
                    "type": "number"
                },
                "product_semi_annually_price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "product_cpu_cores": {
                    "type": "string"
                },
                "product_cpu": {
                    "type": "string"
                },
                "product_bandwidth": {
                    "type": "string"
                },
                "core": {
                    "type": "boolean"
                },
                "semi_annually_location_premium": {
                    "type": "number"
                },
                "biennial_location_premium": {
                    "type": "number"
                },
                "product_on_sale": {
                    "type": "boolean"
                },
                "product_quarterly_price": {
                    "type": "number"
                },
                "product_name": {
                    "type": "string"
                },
                "annually_location_premium": {
                    "type": "number"
                },
                "quarterly_location_premium": {
                    "type": "number"
                },
                "product_drive": {
                    "type": "string"
                },
                "product_triennial_price": {
                    "type": "number"
                },
                "stock": {
                    "type": "string"
                },
                "hourly_location_premium": {
                    "type": "number"
                },
                "data_center": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Location": {
            "properties": {
                "edge": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "core": {
                    "type": "boolean"
                },
                "location": {
                    "$ref": "#/definitions/CityStateCountry"
                }
            },
            "type": "object"
        },
        "CityStateCountry": {
            "properties": {
                "state": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Invoice": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "amount": {
                    "type": "number"
                },
                "amountUnpaid": {
                    "type": "number"
                },
                "clientId": {
                    "type": "integer"
                },
                "created": {
                    "type": "integer"
                },
                "datePaid": {
                    "type": "integer"
                },
                "due": {
                    "type": "integer"
                },
                "sent": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InvoiceUnpaid": {
            "properties": {
                "amountUnpaid": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "InvoicePDF": {
            "properties": {
                "invoiceId": {
                    "type": "integer"
                },
                "pdfData": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InvoiceDetails": {
            "properties": {
                "accountBalance": {
                    "type": "number"
                },
                "clientAddress": {
                    "type": "string"
                },
                "clientName": {
                    "type": "string"
                },
                "companyName": {
                    "type": "string"
                },
                "invoiceDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "invoiceDue": {
                    "type": "string",
                    "format": "date-time"
                },
                "invoiceNumber": {
                    "type": "string"
                },
                "serviceItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InvoiceDetailsServiceItems"
                    }
                },
                "taxesValue": {
                    "type": "number"
                },
                "totalDue": {
                    "type": "number"
                },
                "paymentHistory": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "refundHistory": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "taxesList": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "priorBalance": {
                    "type": "number"
                },
                "paymentsRefunds": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "InvoiceDetailsServiceItems": {
            "properties": {
                "unitPrice": {
                    "type": "number"
                },
                "dateRange": {
                    "type": "object"
                },
                "description": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "serviceId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "InvoiceSeachResult": {
            "properties": {
                "pages": {
                    "type": "integer"
                },
                "perPage": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "hasNext": {
                    "type": "boolean"
                },
                "hasPrev": {
                    "type": "boolean"
                },
                "nextPage": {
                    "type": "integer"
                },
                "prevPage": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "items": {
                    "$ref": "#/definitions/Invoice"
                }
            },
            "type": "object"
        },
        "IpAssignmentRequest": {
            "properties": {
                "facilityCode": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                },
                "prefixLength": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "IpAssignmentCombine": {
            "properties": {
                "assignmentIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "IpAssignmentPut": {
            "properties": {
                "nextHopIp": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NetworkTask-dump": {
            "properties": {
                "metaData": {
                    "type": "string"
                },
                "taskId": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "taskUpdated": {
                    "type": "object"
                },
                "clientId": {
                    "type": "integer"
                },
                "taskCreated": {
                    "type": "object"
                },
                "deviceId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DetailedNullIP": {
            "required": [
                "ip"
            ],
            "properties": {
                "ip": {
                    "type": "string"
                },
                "comments": {
                    "type": "string",
                    "example": "Null routed via API"
                }
            },
            "type": "object"
        },
        "Order-dump": {
            "properties": {
                "info": {
                    "type": "object"
                },
                "status": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                },
                "orderId": {
                    "type": "integer"
                },
                "owner": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OrderGroupCreate": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "same_rack": {
                    "type": "boolean",
                    "default": false
                }
            },
            "type": "object"
        },
        "OrderGroup": {
            "properties": {
                "device_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "same_rack": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "OrderGroupUpdate": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Permission": {
            "required": [
                "permissions",
                "userId"
            ],
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PermissionReturn": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProductInfo": {
            "properties": {
                "edge": {
                    "type": "boolean"
                },
                "product_annually_price": {
                    "type": "number"
                },
                "product_monthly_price": {
                    "type": "number"
                },
                "product_biennial_price": {
                    "type": "number"
                },
                "product_gpu": {
                    "type": "string"
                },
                "monthly_location_premium": {
                    "type": "number"
                },
                "product_memory": {
                    "type": "string"
                },
                "product_original_price": {
                    "type": "number"
                },
                "product_disabled_billing_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "product_hourly_price": {
                    "type": "number"
                },
                "product_display_price": {
                    "type": "number"
                },
                "triennial_location_premium": {
                    "type": "number"
                },
                "product_semi_annually_price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "product_cpu_cores": {
                    "type": "string"
                },
                "product_cpu": {
                    "type": "string"
                },
                "product_bandwidth": {
                    "type": "string"
                },
                "core": {
                    "type": "boolean"
                },
                "semi_annually_location_premium": {
                    "type": "number"
                },
                "biennial_location_premium": {
                    "type": "number"
                },
                "product_on_sale": {
                    "type": "boolean"
                },
                "product_quarterly_price": {
                    "type": "number"
                },
                "product_name": {
                    "type": "string"
                },
                "annually_location_premium": {
                    "type": "number"
                },
                "quarterly_location_premium": {
                    "type": "number"
                },
                "product_drive": {
                    "type": "string"
                },
                "product_triennial_price": {
                    "type": "number"
                },
                "stock": {
                    "type": "string"
                },
                "hourly_location_premium": {
                    "type": "number"
                },
                "data_center": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Options": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/Option"
                }
            }
        },
        "Option": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "monthlyPrice": {
                    "type": "number"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "operatingSystemFeatures": {
                    "$ref": "#/definitions/OperatingSystem"
                },
                "currency": {
                    "type": "string"
                },
                "expressions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OperatingSystem": {
            "properties": {
                "postInstall": {
                    "type": "boolean"
                },
                "cloudInit": {
                    "type": "boolean"
                },
                "sshKey": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProductOption": {
            "properties": {
                "productId": {
                    "type": "integer"
                },
                "options": {
                    "type": "object"
                },
                "pricing": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ProfileUpdate": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "requirePayPalOauthLogin": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "first": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "requireOauthLogin": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Profile": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "country": {
                    "type": "object"
                },
                "city": {
                    "type": "object"
                },
                "company": {
                    "type": "object"
                },
                "metaData": {
                    "type": "object"
                },
                "address": {
                    "type": "object"
                },
                "created": {
                    "type": "object"
                },
                "phone": {
                    "type": "string"
                },
                "isClient": {
                    "type": "boolean"
                },
                "zip": {
                    "type": "object"
                },
                "first": {
                    "type": "string"
                },
                "state": {
                    "type": "object"
                },
                "login": {
                    "type": "string"
                },
                "fax": {
                    "type": "object"
                },
                "last": {
                    "type": "string"
                },
                "fullName": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BasicProfile": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "country": {
                    "type": "object"
                },
                "city": {
                    "type": "object"
                },
                "company": {
                    "type": "object"
                },
                "metaData": {
                    "type": "object"
                },
                "isClient": {
                    "type": "boolean"
                },
                "zip": {
                    "type": "object"
                },
                "first": {
                    "type": "string"
                },
                "state": {
                    "type": "object"
                },
                "login": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "fullName": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Deployment": {
            "properties": {
                "orderNumber": {
                    "type": "string",
                    "example": ""
                },
                "deploymentConfiguration": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "deploymentName": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "startedProvisioning": {
                    "type": "boolean"
                },
                "deploymentId": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DeploymentCustomization": {
            "required": [
                "hostnames",
                "operatingSystem",
                "productId"
            ],
            "properties": {
                "options": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "integer"
                    }
                },
                "locationCode": {
                    "type": "string",
                    "default": ""
                },
                "operatingSystem": {
                    "type": "string",
                    "description": "Operating System's Name or ID"
                },
                "ignitionIds": {
                    "type": "array",
                    "description": "Specify Ignition file ID for CoreOS/Flatcar provisions",
                    "default": [],
                    "example": [],
                    "items": {
                        "type": "integer"
                    }
                },
                "billingPeriod": {
                    "type": "string",
                    "description": "must be one of ['monthly', 'quarterly', 'semi-annually', 'annually', 'biennial', 'triennial', 'hourly']",
                    "default": "monthly"
                },
                "productId": {
                    "type": "integer"
                },
                "forceDeviceIds": {
                    "type": "array",
                    "description": "Either deploy these Device IDs or fail",
                    "default": [],
                    "example": [],
                    "items": {
                        "type": "integer"
                    }
                },
                "quantity": {
                    "type": "integer",
                    "default": 1
                },
                "additionalNotes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicSshKeyId": {
                    "type": "integer"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "DeploymentStart": {
            "required": [
                "billingInfo"
            ],
            "properties": {
                "billingInfo": {
                    "type": "integer"
                },
                "script": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Service-dump": {
            "properties": {
                "serviceId": {
                    "type": "integer"
                },
                "created": {
                    "type": "integer"
                },
                "billedPrice": {
                    "type": "number"
                },
                "billedPricePerPeriod": {
                    "type": "number"
                },
                "serviceCost": {
                    "type": "number"
                },
                "lastRenew": {
                    "type": "integer"
                },
                "renewDate": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "number"
                },
                "orderId": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "discountType": {
                    "type": "string"
                },
                "discountedCost": {
                    "type": "number"
                },
                "serviceDiscount": {
                    "type": "number"
                },
                "serviceDiscountPerPeriod": {
                    "type": "number"
                },
                "ipAddress": {
                    "type": "string"
                },
                "cancelAfter": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "integer"
                },
                "serviceOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceOption"
                    }
                },
                "serviceDevices": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "childServices": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "productId": {
                    "type": "integer"
                },
                "productName": {
                    "type": "string"
                },
                "reseller": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                },
                "contractTerm": {
                    "type": "integer"
                },
                "billingInfoId": {
                    "type": "integer"
                },
                "autoBill": {
                    "type": "boolean"
                },
                "colocationCharge": {
                    "type": "number"
                },
                "resellerBmaasCharge": {
                    "type": "number"
                },
                "facilityName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ServiceManageable": {
            "properties": {
                "eligible": {
                    "type": "boolean"
                },
                "os_detected": {
                    "type": "string"
                },
                "panel_detected": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ServiceManagedReq": {
            "properties": {
                "eligible_os": {
                    "type": "object"
                },
                "eligible_panel": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SshKey": {
            "required": [
                "name",
                "publicKey"
            ],
            "properties": {
                "publicKey": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SshKeyResponse": {
            "properties": {
                "publicKey": {
                    "type": "string"
                },
                "sshKeyId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SshKeyUpdate": {
            "properties": {
                "publicKey": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TicketCreate": {
            "required": [
                "queue",
                "subject"
            ],
            "properties": {
                "queue": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "open"
                },
                "assignment": {
                    "type": "number",
                    "example": 0
                },
                "subject": {
                    "type": "string"
                },
                "priority": {
                    "type": "number",
                    "example": 0
                },
                "source": {
                    "type": "number",
                    "example": 0
                },
                "body": {
                    "type": "string",
                    "example": ""
                }
            },
            "type": "object"
        },
        "Ticket": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": ""
                },
                "subject": {
                    "type": "string",
                    "example": ""
                },
                "queue": {
                    "type": "string",
                    "example": ""
                },
                "updated": {
                    "type": "number",
                    "example": 0
                },
                "opened": {
                    "type": "number",
                    "example": 1651685723
                },
                "serviceId": {
                    "type": "number",
                    "example": 0
                },
                "client": {
                    "$ref": "#/definitions/Client"
                },
                "priority": {
                    "type": "string",
                    "example": ""
                },
                "id": {
                    "type": "number"
                },
                "posts": {
                    "type": "number"
                },
                "contact": {
                    "$ref": "#/definitions/Contact-dump"
                },
                "body": {
                    "type": "string",
                    "example": ""
                },
                "newReply": {
                    "type": "boolean"
                },
                "metaData": {
                    "type": "object"
                },
                "replies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TicketPost"
                    }
                },
                "clientId": {
                    "type": "number"
                },
                "contactId": {
                    "type": "number"
                },
                "duration": {
                    "type": "number"
                },
                "internalTicket": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Client": {
            "properties": {
                "metaData": {
                    "type": "object",
                    "example": {}
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "number"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "first": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "isClient": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TicketPost": {
            "properties": {
                "ticketId": {
                    "type": "number"
                },
                "date": {
                    "type": "number"
                },
                "contactId": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "ubersmith_attached_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TicketAttach"
                    }
                },
                "from": {
                    "type": "object",
                    "example": {}
                },
                "fromAdmin": {
                    "type": "boolean"
                },
                "subject": {
                    "type": "string",
                    "example": ""
                },
                "attachments": {
                    "type": "number"
                },
                "hidden": {
                    "type": "number"
                },
                "clientId": {
                    "type": "number"
                },
                "adminId": {
                    "type": "number"
                },
                "body": {
                    "type": "string",
                    "example": ""
                }
            },
            "type": "object"
        },
        "TicketAttach": {
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "example": ""
                }
            },
            "type": "object"
        },
        "TicketSeachResult": {
            "properties": {
                "pages": {
                    "type": "integer"
                },
                "perPage": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "hasNext": {
                    "type": "boolean"
                },
                "hasPrev": {
                    "type": "boolean"
                },
                "nextPage": {
                    "type": "integer"
                },
                "prevPage": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "items": {
                    "$ref": "#/definitions/TicketPost"
                }
            },
            "type": "object"
        },
        "TicketPut": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": ""
                }
            },
            "type": "object"
        },
        "TicketCreateReply": {
            "required": [
                "body"
            ],
            "properties": {
                "encrypted": {
                    "type": "string"
                },
                "contactId": {
                    "type": "number"
                },
                "recipient": {
                    "type": "string"
                },
                "replyTo": {
                    "type": "string"
                },
                "date": {
                    "type": "number"
                },
                "headers": {
                    "type": "string"
                },
                "cc": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "attachments": {
                    "type": "array",
                    "example": [
                        {
                            "name": "",
                            "file": ""
                        }
                    ],
                    "items": {
                        "type": "object"
                    }
                },
                "hidden": {
                    "type": "number"
                },
                "type": {
                    "type": "number"
                },
                "body": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PublicApiToken-load": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "ipAddresses": {
                    "$ref": "#/definitions/PublicApiTokenIp"
                }
            },
            "type": "object"
        },
        "PublicApiTokenIp": {
            "required": [
                "ips"
            ],
            "properties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PublicApiToken-dump": {
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ipAddresses": {
                    "$ref": "#/definitions/PublicApiTokenIp"
                }
            },
            "type": "object"
        },
        "VlanCreate": {
            "properties": {
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Vlan": {
            "properties": {
                "pendingDevices": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "facilityCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "vlanTag": {
                    "type": "integer"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "vlanId": {
                    "type": "integer"
                },
                "vlanNum": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WebhookEvent": {
            "required": [
                "desc",
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WebhookCreate": {
            "required": [
                "event",
                "url"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "My Webhook"
                },
                "event": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "example": {}
                }
            },
            "type": "object"
        },
        "Webhook": {
            "required": [
                "event",
                "name",
                "url",
                "webhookId"
            ],
            "properties": {
                "webhookId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "event": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "headers": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "WebhookUpdate": {
            "properties": {
                "name": {
                    "type": "string",
                    "example": "My Webhook"
                },
                "event": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "example": {}
                }
            },
            "type": "object"
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        }
    }
}